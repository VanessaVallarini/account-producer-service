// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	models "account-producer-service/internal/models"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// IViaCepApiClient is an autogenerated mock type for the IViaCepApiClient type
type IViaCepApiClient struct {
	mock.Mock
}

// CallViaCepApi provides a mock function with given fields: ctx, ae
func (_m *IViaCepApiClient) CallViaCepApi(ctx context.Context, ae models.ViaCepRequest) (*models.ViaCepResponse, error) {
	ret := _m.Called(ctx, ae)

	var r0 *models.ViaCepResponse
	if rf, ok := ret.Get(0).(func(context.Context, models.ViaCepRequest) *models.ViaCepResponse); ok {
		r0 = rf(ctx, ae)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ViaCepResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, models.ViaCepRequest) error); ok {
		r1 = rf(ctx, ae)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIViaCepApiClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewIViaCepApiClient creates a new instance of IViaCepApiClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIViaCepApiClient(t mockConstructorTestingTNewIViaCepApiClient) *IViaCepApiClient {
	mock := &IViaCepApiClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
